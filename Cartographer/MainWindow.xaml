<Window x:Class="Cartographer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:effects="clr-namespace:System.Windows.Media.Effects;assembly=presentationcore"
    xmlns:lib="clr-namespace:CartographerLibrary;assembly=DrawToolsLib"
    xmlns:util="clr-namespace:CartographerUtilities;assembly=Utilities"
    xmlns:libconvert="clr-namespace:Petzold.Converters;assembly=Utilities"
    xmlns:local="clr-namespace:Cartographer"
    MinHeight="300" MinWidth="300"
    >

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="FileNewCommand" />
        <CommandBinding Command="ApplicationCommands.Print" Executed="FilePrintCommand" />
        <CommandBinding Command="ApplicationCommands.Close" Executed="FileCloseCommand" />
        <CommandBinding Command="ApplicationCommands.Save" Executed="FileSaveCommand" />
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="FileSaveAsCommand" />
        <CommandBinding Command="local:UICommand.OpenMap" Executed="FileOpenMapCommand" />
        <CommandBinding Command="local:UICommand.OpenMapImage" Executed="FileOpenMapImageCommand" />
        <CommandBinding Command="ApplicationCommands.Undo" Executed="EditUndoCommand" />
        <CommandBinding Command="ApplicationCommands.Redo" Executed="EditRedoCommand" />
    </Window.CommandBindings>

    <Window.Resources>
        <!-- Converts tooltype to bool for checking controls -->
        <lib:ToolTypeConverter x:Key="convToolType"/>
        <!-- Converts double to decimal with given precision -->
        <libconvert:DoubleToDecimalConverter x:Key="convDoubleDecimal" />
        <!-- Converts font size by the same way as FontDialog -->
        <util:FontSizeConverter x:Key="convFont" />
        <!-- Used to show disabled  toolbar button -->
        <effects:BlurBitmapEffect x:Key="bmpEffect" KernelType="Box" Radius="2"/>
        <!-- Used to convert color to brush -->
        <util:ColorToBrushConverter x:Key="convColorToBrush"/>

        <!-- Toolbar image style: apply bmpEffect if parent button is disabled. -->
        <Style x:Key="toolbarImageStyle" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Value="False"
                    Binding="{Binding 
                        Path=IsEnabled,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}, AncestorLevel=1}}"
                >
                    <Setter Property="Image.BitmapEffect" Value="{StaticResource bmpEffect}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Font Textblock style: set all font parameters like in DrawingCanvas, except size -->
        <Style x:Key="fontTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{Binding ElementName=drawingCanvas, Path=TextFontFamilyName, Mode=OneWay}"/>
            <Setter Property="FontStyle" Value="{Binding ElementName=drawingCanvas, Path=TextFontStyle, Mode=OneWay}"/>
            <Setter Property="FontWeight" Value="{Binding ElementName=drawingCanvas, Path=TextFontWeight, Mode=OneWay}"/>
            <Setter Property="FontStretch" Value="{Binding ElementName=drawingCanvas, Path=TextFontStretch, Mode=OneWay}"/>
        </Style>
    </Window.Resources>


    <DockPanel LastChildFill="True">

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="ApplicationCommands.New">
                    <MenuItem.Icon>
                        <Image Source="Images/NewDocumentHS.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open Map" Command="local:UICommand.OpenMap">
                    <MenuItem.Icon>
                        <Image Source="Images/openHS.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open Map Image" Command="local:UICommand.OpenMapImage">
                    <MenuItem.Icon>
                        <Image Source="Images/openHS.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" Command="ApplicationCommands.Save">
                    <MenuItem.Icon>
                        <Image Source="Images/saveHS.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save As..." Command="ApplicationCommands.SaveAs">
                    <MenuItem.Icon>
                        <!-- For text alignment -->
                        <Image Source="Images/Transparent.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Print" Command="ApplicationCommands.Print">
                    <MenuItem.Icon>
                        <Image Source="Images/PrintHS.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Name="menuFileRecentFiles"  Header="Recent Files">
                    <MenuItem.Icon>
                        <Image Source="Images/Transparent.png"  />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Exit" Command="ApplicationCommands.Close">
                    <MenuItem.Icon>
                        <Image Source="Images/Transparent.png"  />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Edit" Name="menuEdit">
                <MenuItem Header="Select All" Name="menuEditSelectAll"/>
                <MenuItem Header="Unselect All" Name="menuEditUnselectAll"/>
                <MenuItem Header="Delete" Name="menuEditDelete"/>
                <MenuItem Header="Delete All" Name="menuEditDeleteAll"/>
                <Separator/>
                <MenuItem Header="Move to Front" Name="menuEditMoveToFront"/>
                <MenuItem Header="Move to Back" Name="menuEditMoveToBack"/>
                <Separator/>
                <MenuItem Header="Undo" Name="menuEditUndo"  Command="ApplicationCommands.Undo"/>
                <MenuItem Header="Redo" Name="menuEditRedo" Command="ApplicationCommands.Redo"/>
                <MenuItem Header="Set Properties" Name="menuEditSetProperties"/>
            </MenuItem>

            <MenuItem Header="Draw" Name="menuTools">
                <MenuItem Header="Pointer" Name="menuToolsPointer" Tag="Pointer"/>
                <MenuItem Header="Table Block" Name="menuToolsTableBlock" Tag="TableBlock"/>
                <MenuItem Header="Beacon" Name="menuToolsBeacon" Tag="Beacon"/>
                <MenuItem Header="Barrier" Name="menuToolsBarrier" Tag="Barrier"/>
            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="About DrawTools" Command="ApplicationCommands.Help">
                    <MenuItem.Icon>
                        <Image Source="Images/About.bmp"  />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar >
                <Button Command="ApplicationCommands.New" ToolTip="New">
                    <Image Source="Images/NewDocumentHS.png"  />
                </Button>
                <Button Command="ApplicationCommands.Open" ToolTip="Open">
                    <Image Source="Images/openHS.png"  />
                </Button>
                <Button Command="ApplicationCommands.Save" ToolTip="Save">
                    <Image Source="Images/saveHS.png"  />
                </Button>
                <Separator/>
                <ToggleButton Name="buttonToolPointer"  ToolTip="Pointer" Tag="Pointer"
                     IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,
                         Converter={StaticResource convToolType}, ConverterParameter=Pointer}">
                    <Image Source="Images/PointerHS.png"/>
                </ToggleButton>
                <ToggleButton Name="buttonToolTableBlock" ToolTip="TableBlock" Tag="TableBlock"
                    IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,
                    Converter={StaticResource convToolType}, ConverterParameter=TableBlock}">
                    <Image Source="Images/rectangle.png"/>
                </ToggleButton>
                <ToggleButton Name="buttonToolBeacon" ToolTip="Beacon" Tag="Beacon"
                     IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,
                         Converter={StaticResource convToolType}, ConverterParameter=Beacon}">
                    <Image Source="Images/ellipse.png"/>
                </ToggleButton>
                <ToggleButton Name="buttonToolBarrier" ToolTip="Barrier" Tag="Barrier"
                     IsChecked="{Binding ElementName=drawingCanvas, Path=Tool, Mode=OneWay,
                         Converter={StaticResource convToolType}, ConverterParameter=Barrier}">
                    <Image Source="Images/line.png"/>
                </ToggleButton>
                <Separator/>
                <Button Command="ApplicationCommands.Undo"  ToolTip="Undo" IsEnabled="{Binding ElementName=drawingCanvas, Path=CanUndo, Mode=OneWay}">
                    <Image Source="Images/Edit_UndoHS.png" Style="{StaticResource toolbarImageStyle}"/>
                </Button>
                <Button Command="ApplicationCommands.Redo"  ToolTip="Redo" IsEnabled="{Binding ElementName=drawingCanvas, Path=CanRedo, Mode=OneWay}">
                    <Image Source="Images/Edit_RedoHS.png" Style="{StaticResource toolbarImageStyle}"/>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <!-- Use one of three options: 
             lib:DrawingCanvas                (white canvas)
             Viewbox Name="viewBoxContainer"  (background image inside Viewbox)
             Grid Name="gridContainer"        (background image inside Scrollviewer with zoom)
        
             Comment another options.
        -->

        <!--<lib:DrawingCanvas x:Name="drawingCanvas" Background="White"/>-->


        
        <!--<Viewbox Name="viewBoxContainer">
            <Grid Name="gridContainer">
                <Image Name="imageBackground"  Source="Images/background.jpg" Stretch="None"/>

                <lib:DrawingCanvas x:Name="drawingCanvas" Background="#00000000"
                    Width="{Binding ElementName=imageBackground, Path=ActualWidth, Mode=OneWay}"
                    Height="{Binding ElementName=imageBackground, Path=ActualHeight, Mode=OneWay}"
                    />
            </Grid>
        </Viewbox>-->
        

        
        <Grid Name="gridContainer">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.LayoutTransform>
                        <ScaleTransform
                             ScaleX="{Binding ElementName=sliderScale, Path=Value, Mode=OneWay}"
                             ScaleY="{Binding ElementName=sliderScale, Path=Value, Mode=OneWay}"
                         />
                    </Grid.LayoutTransform>

                    <Image Name="imageBackground"  Source="Images/background.jpg" Stretch="None"/>

                    <lib:DrawingCanvas Name="drawingCanvas" Background="#00000000"
                            Width="{Binding ElementName=imageBackground, Path=ActualWidth, Mode=OneWay}"
                            Height="{Binding ElementName=imageBackground, Path=ActualHeight, Mode=OneWay}"
                            ActualScale="{Binding ElementName=sliderScale, Path=Value, Mode=OneWay}"
                            >
                    </lib:DrawingCanvas>
                </Grid>
            </ScrollViewer>

            <GridSplitter Grid.Row="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top" ResizeDirection="Rows"
                      />

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="9*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0">
                    Scale
                </Label>
                
                <Slider Grid.Column="1" Name="sliderScale"
                    Orientation="Horizontal" Minimum="0.2" Maximum="5.0"
                    Margin="10,5,10,5"
                    Value="1.0"
                />

                <Label Grid.Column="2" Content="{Binding ElementName=sliderScale, Path=Value, Mode=OneWay,
                   Converter={StaticResource convDoubleDecimal}, ConverterParameter=2}"/>

            </Grid>
        </Grid>
        
        
        
    </DockPanel>
</Window>
